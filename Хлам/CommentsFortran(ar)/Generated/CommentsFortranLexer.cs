//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CommentsFortran.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


         using System;
         using System.Collections;

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class CommentsFortranLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		VARIABLE=1, SCIENTIFIC_NUMBER=2, LPAREN=3, RPAREN=4, PLUS=5, MINUS=6, 
		TIMES=7, DIV=8, GT=9, LT=10, EQ=11, POINT=12, POW=13, WS=14;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"VARIABLE", "VALID_ID_START", "VALID_ID_CHAR", "SCIENTIFIC_NUMBER", "NUMBER", 
		"UNSIGNED_INTEGER", "E", "SIGN", "LPAREN", "RPAREN", "PLUS", "MINUS", 
		"TIMES", "DIV", "GT", "LT", "EQ", "POINT", "POW", "WS"
	};


	public CommentsFortranLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public CommentsFortranLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, "'('", "')'", "'+'", "'-'", "'*'", "'/'", "'>'", "'<'", 
		"'='", "'.'", "'^'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "VARIABLE", "SCIENTIFIC_NUMBER", "LPAREN", "RPAREN", "PLUS", "MINUS", 
		"TIMES", "DIV", "GT", "LT", "EQ", "POINT", "POW", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CommentsFortran.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static CommentsFortranLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x10', 'u', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x3', 
		'\x2', '\x3', '\x2', '\a', '\x2', '.', '\n', '\x2', '\f', '\x2', '\xE', 
		'\x2', '\x31', '\v', '\x2', '\x3', '\x3', '\x5', '\x3', '\x34', '\n', 
		'\x3', '\x3', '\x4', '\x3', '\x4', '\x5', '\x4', '\x38', '\n', '\x4', 
		'\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x5', '\x5', '=', '\n', '\x5', 
		'\x3', '\x5', '\x3', '\x5', '\x5', '\x5', '\x41', '\n', '\x5', '\x3', 
		'\x6', '\x6', '\x6', '\x44', '\n', '\x6', '\r', '\x6', '\xE', '\x6', '\x45', 
		'\x3', '\x6', '\x3', '\x6', '\x6', '\x6', 'J', '\n', '\x6', '\r', '\x6', 
		'\xE', '\x6', 'K', '\x5', '\x6', 'N', '\n', '\x6', '\x3', '\a', '\x6', 
		'\a', 'Q', '\n', '\a', '\r', '\a', '\xE', '\a', 'R', '\x3', '\b', '\x3', 
		'\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\v', 
		'\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x6', 
		'\x15', 'p', '\n', '\x15', '\r', '\x15', '\xE', '\x15', 'q', '\x3', '\x15', 
		'\x3', '\x15', '\x2', '\x2', '\x16', '\x3', '\x3', '\x5', '\x2', '\a', 
		'\x2', '\t', '\x4', '\v', '\x2', '\r', '\x2', '\xF', '\x2', '\x11', '\x2', 
		'\x13', '\x5', '\x15', '\x6', '\x17', '\a', '\x19', '\b', '\x1B', '\t', 
		'\x1D', '\n', '\x1F', '\v', '!', '\f', '#', '\r', '%', '\xE', '\'', '\xF', 
		')', '\x10', '\x3', '\x2', '\x6', '\x5', '\x2', '\x43', '\\', '\x61', 
		'\x61', '\x63', '|', '\x4', '\x2', 'G', 'G', 'g', 'g', '\x4', '\x2', '-', 
		'-', '/', '/', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', 
		'w', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', 
		'\x2', '\x3', '+', '\x3', '\x2', '\x2', '\x2', '\x5', '\x33', '\x3', '\x2', 
		'\x2', '\x2', '\a', '\x37', '\x3', '\x2', '\x2', '\x2', '\t', '\x39', 
		'\x3', '\x2', '\x2', '\x2', '\v', '\x43', '\x3', '\x2', '\x2', '\x2', 
		'\r', 'P', '\x3', '\x2', '\x2', '\x2', '\xF', 'T', '\x3', '\x2', '\x2', 
		'\x2', '\x11', 'V', '\x3', '\x2', '\x2', '\x2', '\x13', 'X', '\x3', '\x2', 
		'\x2', '\x2', '\x15', 'Z', '\x3', '\x2', '\x2', '\x2', '\x17', '\\', '\x3', 
		'\x2', '\x2', '\x2', '\x19', '^', '\x3', '\x2', '\x2', '\x2', '\x1B', 
		'`', '\x3', '\x2', '\x2', '\x2', '\x1D', '\x62', '\x3', '\x2', '\x2', 
		'\x2', '\x1F', '\x64', '\x3', '\x2', '\x2', '\x2', '!', '\x66', '\x3', 
		'\x2', '\x2', '\x2', '#', 'h', '\x3', '\x2', '\x2', '\x2', '%', 'j', '\x3', 
		'\x2', '\x2', '\x2', '\'', 'l', '\x3', '\x2', '\x2', '\x2', ')', 'o', 
		'\x3', '\x2', '\x2', '\x2', '+', '/', '\x5', '\x5', '\x3', '\x2', ',', 
		'.', '\x5', '\a', '\x4', '\x2', '-', ',', '\x3', '\x2', '\x2', '\x2', 
		'.', '\x31', '\x3', '\x2', '\x2', '\x2', '/', '-', '\x3', '\x2', '\x2', 
		'\x2', '/', '\x30', '\x3', '\x2', '\x2', '\x2', '\x30', '\x4', '\x3', 
		'\x2', '\x2', '\x2', '\x31', '/', '\x3', '\x2', '\x2', '\x2', '\x32', 
		'\x34', '\t', '\x2', '\x2', '\x2', '\x33', '\x32', '\x3', '\x2', '\x2', 
		'\x2', '\x34', '\x6', '\x3', '\x2', '\x2', '\x2', '\x35', '\x38', '\x5', 
		'\x5', '\x3', '\x2', '\x36', '\x38', '\x4', '\x32', ';', '\x2', '\x37', 
		'\x35', '\x3', '\x2', '\x2', '\x2', '\x37', '\x36', '\x3', '\x2', '\x2', 
		'\x2', '\x38', '\b', '\x3', '\x2', '\x2', '\x2', '\x39', '@', '\x5', '\v', 
		'\x6', '\x2', ':', '<', '\x5', '\xF', '\b', '\x2', ';', '=', '\x5', '\x11', 
		'\t', '\x2', '<', ';', '\x3', '\x2', '\x2', '\x2', '<', '=', '\x3', '\x2', 
		'\x2', '\x2', '=', '>', '\x3', '\x2', '\x2', '\x2', '>', '?', '\x5', '\r', 
		'\a', '\x2', '?', '\x41', '\x3', '\x2', '\x2', '\x2', '@', ':', '\x3', 
		'\x2', '\x2', '\x2', '@', '\x41', '\x3', '\x2', '\x2', '\x2', '\x41', 
		'\n', '\x3', '\x2', '\x2', '\x2', '\x42', '\x44', '\x4', '\x32', ';', 
		'\x2', '\x43', '\x42', '\x3', '\x2', '\x2', '\x2', '\x44', '\x45', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\x43', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'\x46', '\x3', '\x2', '\x2', '\x2', '\x46', 'M', '\x3', '\x2', '\x2', 
		'\x2', 'G', 'I', '\a', '\x30', '\x2', '\x2', 'H', 'J', '\x4', '\x32', 
		';', '\x2', 'I', 'H', '\x3', '\x2', '\x2', '\x2', 'J', 'K', '\x3', '\x2', 
		'\x2', '\x2', 'K', 'I', '\x3', '\x2', '\x2', '\x2', 'K', 'L', '\x3', '\x2', 
		'\x2', '\x2', 'L', 'N', '\x3', '\x2', '\x2', '\x2', 'M', 'G', '\x3', '\x2', 
		'\x2', '\x2', 'M', 'N', '\x3', '\x2', '\x2', '\x2', 'N', '\f', '\x3', 
		'\x2', '\x2', '\x2', 'O', 'Q', '\x4', '\x32', ';', '\x2', 'P', 'O', '\x3', 
		'\x2', '\x2', '\x2', 'Q', 'R', '\x3', '\x2', '\x2', '\x2', 'R', 'P', '\x3', 
		'\x2', '\x2', '\x2', 'R', 'S', '\x3', '\x2', '\x2', '\x2', 'S', '\xE', 
		'\x3', '\x2', '\x2', '\x2', 'T', 'U', '\t', '\x3', '\x2', '\x2', 'U', 
		'\x10', '\x3', '\x2', '\x2', '\x2', 'V', 'W', '\t', '\x4', '\x2', '\x2', 
		'W', '\x12', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\a', '*', '\x2', '\x2', 
		'Y', '\x14', '\x3', '\x2', '\x2', '\x2', 'Z', '[', '\a', '+', '\x2', '\x2', 
		'[', '\x16', '\x3', '\x2', '\x2', '\x2', '\\', ']', '\a', '-', '\x2', 
		'\x2', ']', '\x18', '\x3', '\x2', '\x2', '\x2', '^', '_', '\a', '/', '\x2', 
		'\x2', '_', '\x1A', '\x3', '\x2', '\x2', '\x2', '`', '\x61', '\a', ',', 
		'\x2', '\x2', '\x61', '\x1C', '\x3', '\x2', '\x2', '\x2', '\x62', '\x63', 
		'\a', '\x31', '\x2', '\x2', '\x63', '\x1E', '\x3', '\x2', '\x2', '\x2', 
		'\x64', '\x65', '\a', '@', '\x2', '\x2', '\x65', ' ', '\x3', '\x2', '\x2', 
		'\x2', '\x66', 'g', '\a', '>', '\x2', '\x2', 'g', '\"', '\x3', '\x2', 
		'\x2', '\x2', 'h', 'i', '\a', '?', '\x2', '\x2', 'i', '$', '\x3', '\x2', 
		'\x2', '\x2', 'j', 'k', '\a', '\x30', '\x2', '\x2', 'k', '&', '\x3', '\x2', 
		'\x2', '\x2', 'l', 'm', '\a', '`', '\x2', '\x2', 'm', '(', '\x3', '\x2', 
		'\x2', '\x2', 'n', 'p', '\t', '\x5', '\x2', '\x2', 'o', 'n', '\x3', '\x2', 
		'\x2', '\x2', 'p', 'q', '\x3', '\x2', '\x2', '\x2', 'q', 'o', '\x3', '\x2', 
		'\x2', '\x2', 'q', 'r', '\x3', '\x2', '\x2', '\x2', 'r', 's', '\x3', '\x2', 
		'\x2', '\x2', 's', 't', '\b', '\x15', '\x2', '\x2', 't', '*', '\x3', '\x2', 
		'\x2', '\x2', '\r', '\x2', '/', '\x33', '\x37', '<', '@', '\x45', 'K', 
		'M', 'R', 'q', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
